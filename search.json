[
  {
    "objectID": "teaching/teaching-statement.html",
    "href": "teaching/teaching-statement.html",
    "title": "Teaching philosophy",
    "section": "",
    "text": "As a teacher-scholar, my teaching development has been intertwined with my development as a researcher. In particular, I have learned about the ways in which effective research and teaching do not come from “eureka” moments of intellectual brilliance, but, instead, depend on thoughtful planning and structures that support success from the bottom up. Just as rigorous study design and statistical analysis are necessary to answer a research question, positive early experiences and supportive course structures are necessary for students to enter a discipline and thrive within it. I focus on designing and teaching classes where I can inspire new students to study psychology and scientific computing. In those classes, I implement accessible course policies to sustain student success throughout the semester. Finally, I maintain comprehensive course materials to standardize my pedagogy and share those materials to support my peers’ teaching.\nI strive to nurture novice scientists’ critical thinking skills. Intro-level instructors have the privilege and responsibility of serving as the welcome committee for students entering a new academic discipline. Psychology in particular can serve both as a gateway to further scientific study for students curious about human behavior, and as a core college science experience for students fulfilling breadth requirements. I am committed to balancing the needs of these two groups of students through intro psych classes that are rigorous yet accessible. For example, I collaborated with Dr. Caroline Marvin in developing a new team-based introductory psychology course at Columbia University (“The Science of Psychology: Explorations & Applications”) taught for the first time in spring 2021. I helped select readings, develop lesson plans, and draft assignments, paying special attention to craft learning objectives and structure assignments in a way that was simultaneously appropriate for prospective psychology/neuroscience majors and for general-education students. For instance, I helped build units around applied “challenges” that grouped psychological concepts based on real-world significance. One unit combined concepts from perception and infant/child development, which are not commonly grouped together in introductory psychology courses or textbooks, in the context of masked in-person vs. remote learning strategies for COVID safety in schools (see Thieu et al., 2022, Journal of College Science Teaching for a summary and reflection of our work). I then taught the course as instructor of record in summer 2022, further refining the course to take advantage of summer course structure. During the class on perception, groups of students broke down the results and figures from papers on emotion recognition from face vs. body, and during the class on development, groups practiced writing a “grant” to extend findings from rodent research on infant-maternal attachment to humans. During the final class of the unit, groups used evidence from pre-class readings and in-class activities to propose a hypothetical elementary school’s COVID policy, arguing for masked in-person, remote, or hybrid learning. I leveraged the longer summer class meetings to allow students to engage more deeply with the material via the activities, all while I was able to assess their learning by observing their group work. By the end of the course, students reflected positively on the skills they acquired and stated plans to apply course content to their work in other majors.\nGoing beyond content, I build accessibility into my course policies to sustain student success. For example, psychology students entering quantitative courses may lack experience using scientific computing tools like R to analyze data, but they can build those skills given sufficient support. In this case, an accessible grading structure is one that will scaffold students’ learning by rewarding incremental progress and learning from feedback, without penalizing students for early mistakes. As a curriculum developer and instructor, I have designed assignment submission and grading policies that allow students flexibility in managing their own deadlines, without penalizing students who need more practice but ultimately achieve the same learning objectives. As instructor for Stats II in Psychology at Spelman College in spring 2024, I designed a two-stage system where each weekly problem set was eligible for full-credit revisions, with no late or resubmission penalty, if revised within one week of receiving the initial grade and feedback. I designed this structure to incentivize students to engage with my feedback and improve their work to meet learning objectives, without penalizing students for first-round mistakes. At the same time, the revision structure allowed me to grade more rigorously on the first pass and hold students to higher standards, knowing that they would have the opportunity to respond to my feedback for full credit. Finally, the time-limited nature of the problem set revisions encouraged students to stay on top of their work through the course, while protecting me as the instructor from a buildup of revision submissions at the end of the term. Over half of students completed at least one revision and raised their problem set grade, showing that students indeed made use of the system. In this way, I was able to leverage course logistics to support student learning, especially for a quantitative course where students might bring insecurity about their own abilities into the classroom.\nFinally, in order to codify effective teaching practices and make them repeatable across terms and instructors, I create and refine detailed teaching materials that persist and evolve after my involvement with a course. As a lab instructor for the Spelman College Women in STEM six-week intensive program for incoming first-years in summer 2023 and 2024, I developed and taught a project-based data science course. Students first completed a crash course in data cleaning and visualization techniques using R, and then each student conducted an independent data science analysis—designing their own research question, sourcing their own publicly available datasets, identifying and graphing patterns in their data, and presenting their results. I created all lesson plans and course materials natively in R and managed a course workspace in RStudio Cloud for students to complete exercises and conduct their analyses. The course’s R integration made it easy to format course materials for storage and sharing. For example, on my end, I published the syllabus, course schedule, and lecture notes online as a public website using GitHub and Netlify, both for student reference and to share with other instructors and interested parties. On students’ end, they were able to export their summer work and re-publish their projects in their own GitHub coding portfolios, bringing the technical integration full-circle. In this way, I applied my technical expertise not only to support student learning during a single course but also to create a persistent store for course materials on which my peers and I can build in the future.\nIn summary, I work to make the discipline I love interesting and accessible to students through courses on psychological concepts, statistics, and scientific computing. I design those classes not only to inspire students through content but to set them up for success through supportive course policies. In those courses, I support my own and my peers’ future teaching by creating, maintaining, and documenting teaching materials that save time, keep record of successful teaching strategies, and support future innovation.",
    "crumbs": [
      "Teaching philosophy"
    ]
  },
  {
    "objectID": "teaching/teaching-materials.html",
    "href": "teaching/teaching-materials.html",
    "title": "Example teaching materials",
    "section": "",
    "text": "Syllabus\nThis is a prototype syllabus for Intro to Programming for Behavioral Scientists that I designed as part of the Columbia Center for Teaching and Learning’s Innovative Course Design Seminar. The class has not yet been taught and I have not prepared curriculum for it, but I would like to offer it in the future!\nMy overarching goal in designing this syllabus was to lower barriers to student learning, and publicize that goal to students. I expect students to enter my class with no coding experience, and likely an aversion to math & programming topics. I want students to come away from the class believing that programming tools, when wielded properly, are key to producing strong psychological science, and that anyone can produce strong psychological science because anyone can program. While the syllabus definitely won’t achieve all of these goals on its own, it can help set an inclusive tone. I decided to format the syllabus as a website because I felt that would make it visually enticing and readable, and because the website format facilitates posting of R code lecture notes into the same site, allowing the site to be a one-stop reference shop for course info.\nI tried to use an informal but informative tone while writing up course policies to keep those policies clear to all students, irrespective of English language background. In describing those policies, I tried to mention my rationale behind those policies where possible, so that students would understand that all policies, including those that might seem punitive (like not accepting late assignments without prior claiming of a deadline extension), are designed to support student learning.\nI also paid special attention to crafting the following policies:\n\nGrading: Encouraging students to improve their work based on feedback, and use tokens to manage their own deadline extension needs, no questions asked\nEquipment: Reinforcing that students should not self-select out of the class for not having the “right” computer, or a sufficiently expensive one\nCommunication: Spelling out what students should include in help request emails to help them think through their code issue and help me identify their problem quickly\n\nSyllabus website\n\n\n\n\nLesson plan\nThis is a lesson plan for the lab course associated with Research Methods in Psychology, taught in the Columbia psychology department. Approximately 13-17 students are typically enrolled in each lab section. This particular lesson is taught in week 6 of the 13-week semester.\nWhen I TA’d this class in fall 2019, I expanded all lab outlines from basic bullet-point lists of procedural guidelines into full objective-driven lesson plans. I included this lesson plan to illustrate my lesson plan design style. I strive to make lesson plans comprehensive, like a cross between a textbook and a stage manager’s run sheet. In addition to a distinct learning objective, each lab module in the lesson has a timestamp with a suggested run time (and sub-timestamps for longer modules), as well as point-by-point instructions on how to run the module. My junior PhD student colleagues who TA’d the class after me reported using my lesson plans like a textbook, allowing them to quickly parse lab objectives, understand why activities were structured and timed the way they were, and glean procedural tips on how to run the activities. The lessons served not only to structure my own teaching, but also to train the TAs who came after me and to standardize instruction across their sections.\n\n\n\n\n\nMini-lecture video\nThis is a mini-lecture video for Science of Psychology: Explorations and Applications, a semi-flipped class taught in the Columbia psychology department. When we taught the class online in spring 2021, 29 students were enrolled in the class.\nThis video, which illustrates how the brain processes visual information, was assigned along with pre-class readings on visual perception. I included this lesson plan to illustrate how I work with the affordances offered by the teaching environment when creating learning content. I created this animated video to teach a highly visual topic (illustrating neuroanatomy and examples of perceptual information) using visual tools better suited to asynchronous video than synchronous lecture. Students enjoyed watching the video, found the concepts clear (as demonstrated in subsequent reading quizzes and in-class activities), and appreciated being able to pause and replay them at their own pace.\n\n\n\n\nProblem set\nThis is an interactive R problem set for Intro to Programming in R, taught in the Columbia business school. Approximately 40-50 students are typically enrolled in the class. This particular assignment is assigned week 2 and due week 3 of the 6-week half-semester term.\nWhen I TA’d this class in fall 2021, I rewrote weeks 1-3’s assignments to run as interactive browser-based R exercises using the learnr package, instead of their previous form as R Markdown assignments. The key difference between the new and old assignment format is that in their old R Markdown form, students needed to correctly specify a number of technically unrelated code commands (loading packages, document metadata parameters, etc) and correctly implement programming syntax (spelling function and variable names correctly, initializing variables before they are called later, etc.) in order for their documents to render for submission. If there was a syntax error in one answer, the entire document would not render, even if the other answers were correct. In previous semesters of the class, I found that students became frustrated and demoralized when they could not render their homework documents because of such syntax errors, especially when it turned out that one error blocked the entire document from rendering. I realized that familiarity with programming syntax principles was unreasonable to expect students to have mastered that early in the class (and honestly, likely to take many months, if not years, to truly master!). I wanted to rework the first three assignments to run using an engine that would ease their dependence on syntax.\nThere are two main benefits to the new assignment engine. First, each question runs individually, so a syntax error in one question does not block finishing the rest of the assignment. Second, package loading and other programming setup are handled under the hood, so students no longer have to specify those in order to submit their assignments. Later assignments in the term are still administered as R Markdown documents, so students are assessed on those skills after they have had more experience. However, by removing earlier assignments’ dependence on those skills, I brought the assignments more in line with the expected temporal progression toward course learning objectives.",
    "crumbs": [
      "Example teaching materials"
    ]
  },
  {
    "objectID": "research.html",
    "href": "research.html",
    "title": "Research",
    "section": "",
    "text": "In accordance with my IRB protocols, I do not advertise my own research studies on my website. However, if you’re interested in participating in research in general there are many other studies you can take part in.\nYou can participate in online research studies from researchers all over the world at prolific.co. They’re based in the UK, but many studies are posted for participants in the US as well.\nYou can participate in local in-person research studies at a university near you. Check out your local university’s psychology department and medical school websites to find out what kinds of research studies they’re recruiting for."
  },
  {
    "objectID": "research.html#recruiting-online-participants",
    "href": "research.html#recruiting-online-participants",
    "title": "Research",
    "section": "Recruiting online participants",
    "text": "Recruiting online participants\nI run online studies on prolific.co, a researcher-friendly website for online behavioral study recruitment that’s kind both to researchers and to participants. All my contacts with participants have been pleasant, and the Prolific support staff are so responsive and helpful. You can get a credit towards paying your first batch of participants if you sign up with my link here!"
  },
  {
    "objectID": "research.html#running-behavioral-tasks-online",
    "href": "research.html#running-behavioral-tasks-online",
    "title": "Research",
    "section": "Running behavioral tasks online",
    "text": "Running behavioral tasks online\nI use gorilla.sc, a site that lets you build behavioral tasks both through GUI and code (their software is based on JavaScript/JQuery, though you don’t need to know either of those languages to use their tools). Their site is easy to use for JavaScript novices (like me), and still allows for full customization through added code. Their support staff are stellar as well! Instead of paying a subscription fee, you pay about a dollar per each participant who completes a task built on their platform. If you’d like to sign up, you can run twenty participants free with a referral. (email me for a referral link; they don’t currently have a referral link set up. PS: An academic email address is required to claim the bonus.)"
  },
  {
    "objectID": "research.html#postdoctoral-research",
    "href": "research.html#postdoctoral-research",
    "title": "Research",
    "section": "Postdoctoral research",
    "text": "Postdoctoral research\n\nHuman affective responses to looming motion\nRapidly approaching objects, like incoming predators or projectiles, are often dangerous. Many species of animals can detect and avoid the specific patterns of looming visual motion associated with such objects, using quite similar neural mechanisms.\nExperience some looming motion with this video:\n\n\nFor example, mammals encode looming motion in the superior colliculus, a region of the midbrain that coordinates rapid reorienting to salient signals in the environment. In this project, I am using computational models from nonhuman animal research (for example, fruit flies!) to investigate how humans respond to looming motion:\nHow does looming motion in videos predict people’s emotional responses to those videos? Preliminary results suggest that the “loominess” of short, emotionally evocative videos can predict how people label their emotional responses to those videos (choices like “fear”, “joy”, “anxiety”, “excitement”, etc.). Specifically, patterns of looming-predicted emotional responses look like responses made based on subjective arousal, or how “activated” people feel when watching the videos.\nHow does the human superior colliculus encode looming motion? Preliminary results suggest that BOLD fMRI activity in the human superior colliculus does track with the “loominess” of videos–in particular, even boring videos of expanding rings typically used to map out visual space in the brain. We are currently conducting an fMRI study to look further at how superficial and deep layers of the superior colliculus might track different visual features of those videos, like retinotopy (where in the visual field is stuff happening?) vs. specific looming motion (is something expanding like it’s coming toward me, anywhere in the visual field?).\nHow does the human superior colliculus encode people’s emotional responses to naturalistic looming motion? We are currently conducting an fMRI study to test this question! We are showing people emotionally evocative videos of naturalistic looming (animals jumping at the camera… like the video above!), and then asking them to report how each video makes them feel. This way, we can directly compare patterns of BOLD activity in the superior colliculus based on what animals people are watching, whether those animals are looming, and how people feel as they watch."
  },
  {
    "objectID": "research.html#graduate-school",
    "href": "research.html#graduate-school",
    "title": "Research",
    "section": "Graduate school",
    "text": "Graduate school\nCheck out my dissertation for the (very) nitty-gritty of these projects!\n\nIndividual differences in age perception\nWhen we see another person’s face, we pretty quickly estimate their race, gender, and age just from looking at their face. When it comes to age in particular–we can estimate someone’s age in years, but we can also label them as “young” or “old”. How do people categorize faces of different ages, and do different people categorize age differently? We show participants a series of faces made to appear young, old, and somewhere in the middle, and ask them to label each face as “young” or “old”.\n\n\n\nSome example age- and gender-morphed faces. (People don’t actually see them animated in the study, just one at a time!)\n\n\nCheck out the “poster” video below for preliminary results on how the brain patterns of younger participants (in their 20s) change when judging faces based on their age vs. gender, or using binary vs. slider judgments.\n\n\n\n\nMeasurement of emotion self-reporting\nWhat emotion are you feeling right now? When you’re experiencing some emotion, you could probably report what it is you’re feeling without much difficulty–this is something that humans can do readily. But how do we turn our subjective emotional experience into self-report, and how does this relate to other parts of our emotional lives? We’ve developed a psychophysics-style paradigm where we show participants a series of brief, emotionally evocative GIFs, ask them to choose one of two emotion words to describe each experience (e.g. “neutral” or “fear”), and then fit their responses to a psychometric function. This way, we can find out how fearful (for example) a GIF has to be for an individual to say they feel fear (their psychometric threshold). We’ve also administered a series of surveys on things like mood, depression/anxiety tendencies, and more, so we can begin to examine how emotion-labeling patterns (as indexed by the psychometric task) predict facets of people’s social & emotional lives.\nWe’ve run this first as a behavioral study, where results indicate that people who report being more emotionally expressive in their day-to-day lives have lower thresholds for reporting emotional responses to our GIFs (see this poster).\nWe also ran an fMRI study to investigate whether people’s neural representations of subjective emotional experiences, specifically ambiguous, mixed-emotion experiences, change based on how they report their emotional response to said experiences. Preliminary results indicate that fMRI patterns for mixed emotional experiences appear not as a blend of positive and negative patterns, but as a distinct pattern that may arise from the process of resolving emotional ambiguity. (see this poster)."
  },
  {
    "objectID": "research.html#before-graduate-school",
    "href": "research.html#before-graduate-school",
    "title": "Research",
    "section": "Before graduate school",
    "text": "Before graduate school\n\nAttention, memory, and media multitasking\nMedia multitasking, or the act of engaging with multiple streams of media simultaneously, something. (If you’re listening to music while reading this, you’re engaging in media multitasking right now!) In the Stanford Memory Lab, we’ve demonstrated that individuals who chronically media multitask show a reduced working memory capacity, and that those people also show reduced long-term memory for the items they seem to be having more difficulty maintaining in working memory. What are the neural mechanisms subserving this relationship, and how do individual differences on a neural level track with trait media multitasking? It’s possible that the degree to which people favor the use of top-down, goal-directed attention vs. bottom-up, salience-reorienting attention might predict someone’s tendency to perform worse on these working memory and long-term memory tasks. At the Stanford Memory Lab, I helped use fMRI to investigate how activation in top-down dorsal attention networks and bottom-up ventral attention networks might predict whether someone will successfully engage with and remember a given stimulus. They are conducting a follow-up EEG project to investigate whether individual differences in power in certain EEG frequency bands, which might track top-down pre-stimulus preparatory attention, predict the degree to which someone will successfully engage with and remember a given stimulus.\n\n\nHealthy aging and associative memory\nEveryone experiences changes in cognition as they get older. We understand that some people develop neurodegenerative disorders as they age, such as Alzheimer’s disease and dementia, and that these pathological changes are associated with marked deficits in cognition. But this isn’t inevitable for people as they age. What kinds of cognitive changes should we expect as we age? What changes are nothing to worry about, and what changes are of medical concern? Existing research indicates that associative memory, the particular task of binding previously unrelated features into a single memory representation, may be a “canary in the coal mine” for pre-clinical cognitive decline. (When you run into an acquaintance at the grocery store, and you can remember the context in which you know them, but not what their name is, that’s your associative memory that’s failing you.) At the Stanford Memory Lab, I assisted with a large-scale individual differences study to try to describe how changes in cognition (associative memory in particular) relate to clinical markers of neurodegeneration in cognitively healthy older adults.\nYou can read the published results (to date) of this research here!"
  },
  {
    "objectID": "posts/2024-05-20-conda-env-export-from-history.html",
    "href": "posts/2024-05-20-conda-env-export-from-history.html",
    "title": "Export your conda envs –from-history !",
    "section": "",
    "text": "Hi everyone! It’s been 3 years since I’ve put up a blog post…\n\n\n\nvia GIPHY\n\nBut I’m trying to get back into the practice of documenting tips/tricks/hacks I’ve assembled in the process of managing my research computing, so that you don’t have to struggle like I did!\nRight now, I’m currently cleaning up the analysis code repository associated with my first published postdoctoral research project. Accordingly, I’m hoping to put up several little #hacks blog posts up to document various roadblocks/bypasses I’m encountering as I attempt to make the analysis code end-to-end reproducible for another user.\nI’ve used so many other scientists’/programmers’ helpful blog posts in setting up the pipeline, so I hope I can pay it forward!"
  },
  {
    "objectID": "posts/2024-05-20-conda-env-export-from-history.html#im-alive",
    "href": "posts/2024-05-20-conda-env-export-from-history.html#im-alive",
    "title": "Export your conda envs –from-history !",
    "section": "",
    "text": "Hi everyone! It’s been 3 years since I’ve put up a blog post…\n\n\n\nvia GIPHY\n\nBut I’m trying to get back into the practice of documenting tips/tricks/hacks I’ve assembled in the process of managing my research computing, so that you don’t have to struggle like I did!\nRight now, I’m currently cleaning up the analysis code repository associated with my first published postdoctoral research project. Accordingly, I’m hoping to put up several little #hacks blog posts up to document various roadblocks/bypasses I’m encountering as I attempt to make the analysis code end-to-end reproducible for another user.\nI’ve used so many other scientists’/programmers’ helpful blog posts in setting up the pipeline, so I hope I can pay it forward!"
  },
  {
    "objectID": "posts/2024-05-20-conda-env-export-from-history.html#todays-tip-export-your-conda-environments-from-history",
    "href": "posts/2024-05-20-conda-env-export-from-history.html#todays-tip-export-your-conda-environments-from-history",
    "title": "Export your conda envs –from-history !",
    "section": "Today’s tip: Export your conda environments –from-history",
    "text": "Today’s tip: Export your conda environments –from-history\n\nThe scenario\nIf you use conda to manage Python package environments associated with specific analysis project folders (and you should!), you’ll know that you can export a environment.yml config file that records all of the packages installed in your environment using the following terminal command:\nconda env export &gt; environment.yml\nwhere conda env export will generate the config information associated with your active environment, and &gt; environment.yml captures the text output and saves it in said file.\nThen, another user (or you, but in a different folder) can recreate your package environment by saving a copy of environment.yml into that new project folder and running the following in a terminal:\nconda env create -f environment.yml\n\n\nThe problem\nIn a perfect world, this goes off with no hitches!\nHOWEVER, if the exported environment is from a machine running a different OS than the OS on which you are creating the new environment, you are likely to run into problems if you follow these instructions as written. (I encountered this use case because I do my main work on our lab’s Linux computing cluster, but I prefer to generate ggplot figures on my local MacBook, and so I keep GitHub-tracked copies of the repository on the lab server and on my laptop.)\nThis is because the default behavior of conda env export is to export all installed packages to the config record, including OS-specific dependencies. If you attempt to conda env create from, say, a Mac-generated environment.yml file on a Linux machine (as I did), you will get errors that some Mac-specific packages aren’t available to install, and the environment creation will fail.\nYou might be thinking, “But wait! None of the Python packages I explicitly installed in my environment are OS-specific. numpy/pandas/matplotlib/pytorch/what have you are all supposed to work on any operating system!”\nThat is true, because the OS-specific dependencies are being hidden from you! If you just run, say, conda install pandas, you can install the same pandas version on Windows, Mac, or Linux, but pandas’ underlying dependency packages (that will be installed along with the package you asked for) might differ from OS to OS.\n\n\nThe solution\nYou can add the --from-history flag to your conda env export call to export a lighter-weight version of the config info to environment.yml.\nconda env export --from-history &gt; environment.yml\nInstead of writing out your package environment with all of the nitty-gritty OS-specific package info, the --from-history flag tells conda env export to record only the packages that were explicitly installed using conda install. Thus, environment.yml will record the endpoint packages you told conda to install, but not the (OS-specific) package dependencies that come along for the ride.\nThis is covered briefly in the conda docs, but it’s really easy to miss if you’re not specifically looking for it–hence this blog post.\nNow, when you port that environment.yml onto another machine running a different operating system, you should be able to recreate the environment without running into cross-OS errors!\n(Obviously, you might still get a different error. /shrug but it won’t be this one, hopefully.)\nHappy environment creating!\n\n\nPS: Refine environment.yml by hand\nAnother behavior associated with the --from-history flag is that it only records the package versions (or lack thereof) that you explicitly specified upon install. For example, if you specifically called, like:\nconda install pytorch=1.12.1\nto install that specific version of PyTorch, then your environment.yml file will record pytorch=1.12.1 accordingly, but if you only called:\nconda install pytorch\nthen your environment.yml file will only record pytorch without a specific version associated.\nOne of the purposes of recording package environments is to specify package versions, just in case a package update introduces a feature change that causes code not to reproduce as written. By default, conda env export does include package version information, which we want, but it includes it alongside OS-specific information which we don’t want.\nIf you want to add back in package version information, but it wasn’t originally caught/logged when you ran conda env export --from-history, you can manually edit the environment.yml and add in package version info or specific conda channel info that will be used when someone else conda env creates an environment from your file.\n(Please remember that if you later run conda env export --from-history &gt; environment.yml again, conda will overwrite any of your hand edits to the previous environment.yml unless you specify a different path for the new environment.yml to be overwritten! And then, yes, you will need to manually re-add in your package version/channel specs. I really hate this, but it only takes a few seconds as long as you remember to do it.)"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Monica Thieu on the internet",
    "section": "",
    "text": "I am a postdoctoral fellow at Emory University, studying how we process and conceptualize different types of emotional experiences.\nI use primarily R for my own data analysis and teach R so others might use it as well.\nWelcome to my quarto-powered website! Please take a look around."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About me",
    "section": "",
    "text": "Where I’m at.\nI’m currently a FIRST-funded postdoctoral fellow working in Dr. Phil Kragel’s ECCO Lab at Emory University in Atlanta, GA. In my research, I apply deep learning models to behavior and neuroimaging to investigate how people experience emotions from the things they see and hear. In my teaching, I develop courses on the foundations of those computational techniques for junior behavioral scientists. At any given moment, I’m probably drinking from a very large cup of tea.\nPreviously:\nIn 2013 I started working as a research assistant on a media multitasking & cognition project with Dr. Melina Uncapher, then a research associate in Dr. Anthony Wagner’s Memory Lab, during my freshman year at Stanford University. She couldn’t get rid of me, and I continued working with her in the lab throughout undergrad, earning two undergraduate summer fellowships through Stanford (PsychSummer and Bio-X) so I would literally never have to leave. I completed my bachelor’s degree in three years, serving as an undergraduate Teaching Fellow for Psych One, Stanford’s introductory psychology course, during my third year, while also completing an honors thesis under Drs. Uncapher and Wagner.\nAfter graduation in 2015, I transitioned into a full-time lab manager + research assistant position in the Memory Lab. As lab manager/RA, I served as a jack-of-most-trades, handling various arms of data collection and analysis for our healthy aging study, maintaining lab needs both tangible (office supplies, copies, uncomfortable amounts of coffee) and intangible (IRB protocols, software licenses, moral support), and defusing tense meetings with horrible jokes. I also spent some time assisting Dr. Uncapher with data processing and statistics for her educational neuroscience projects with the Neuroscape group at UC San Francisco.\nIn fall 2017, I began working on my PhD in Dr. Kevin Ochsner’s Social Cognitive & Affective Neuroscience Lab at Columbia University, which I completed in spring 2022. From 2017-2019, I co-managed an informal R users club in the department, where I helped to organize a yearly coding bootcamp and bi-weekly meetings/workshops to enrich our collective R experience. During my first post-PhD summer, I taught The Science of Psychology: Explorations and Applications, a class I originally co-designed with Dr. Caroline Marvin, at Columbia.\n\n\nSome of my code.\nCheck out my GitHub to see the code projects I’ve contributed to.\n\n\nA snapshot of my CV.\n(Click here for the full-page version. Made with the vitae package!)"
  },
  {
    "objectID": "game-shows.html",
    "href": "game-shows.html",
    "title": "Game shows",
    "section": "",
    "text": "First things first…\n\nBuy a Team Ken shirt or other swag here to represent/embarrass Ken Jennings, the GOAT. All profits donated to the Pancreatic Cancer Action Network in honor of Alex Trebek.\n\nWhen I was little, instead of doing normal kid things, I would read piles upon piles of nonfiction books about history and science. Somehow, a lot of this academic detritus has collected and stuck in my head over the years (hopefully useful for an academic?), and when combined with embarrassing volumes of angsty mid-2000s pop-punk lyrics, it turns out I know a lot of random stuff. Eventually I had the bright (and foolish) idea to try to make something of this. Here you can see what I’ve gotten away with so far…\n\n(2012) Jeopardy! College Championship\nIn 2012, I was selected to represent the University of North Texas in the Jeopardy! College Championship. At the time, I was a senior at the Texas Academy of Math and Science, a program for high school juniors and seniors to enroll at UNT, live in a dedicated dorm, and take two years of college courses. I was a UNT sophomore by credits, so I was technically a college undergraduate. If it’s good enough for Jeopardy!, it’s good enough for me!\nThanks to some educated guessing and a robust knowledge of the day’s viral YouTube videos, I managed to win first place in the tournament, taking home $100,000 and an awkwardly top-heavy trophy. The money disappeared into college tuition as quickly as it came, but the trophy is still somewhere in my parents’ house.\n\n\n(2013) Jeopardy! Tournament of Champions\nAfter years of merely yelling answers at the TV from my couch, getting to play Jeopardy! on the real stage got me hooked. Luckily, in addition to the top winners from the current season of grown-up Jeopardy!, the winner of the College Championship gets an automatic spot in that year’s Tournament of Champions. I got to come back for one last chance to get schooled by actual trivia experts, where I lost in the first round, but I had so much fun in the process that it was easily worth it in the end.\n\n\n(2016) 500 Questions, season 2\nAfter finishing Jeopardy!, I accepted my fate as a forgotten has-been. Then, out of the blue, almost 3 years later, I got a Facebook message from a casting director recruiting contestants for a new prime-time trivia TV special. After an arcane months-long audition process (the details of which I must take to my grave, or the production lawyers will send me there ahead of schedule), I was miraculously selected to be the first “challenger” on Season 2 of 500 Questions, a show where you try to answer as many (up to 500!) questions as you can without missing three in a row. I clawed my way up to $28,000 of prize money, which has paid for a whole lot of snacks (but never enough!).\n\n\n(2019) Jeopardy! All-Star Games\nYou can take the girl off the game show, but maybe you can’t take the game show out of the girl. Jeopardy! had long since been a joke item at the very end of my CV, when one day I got an email from the producers (who I hadn’t heard from in years) asking if I was interested in being a part of “something special…” Uh, YES. And look what happened!\nFor Jeopardy’s first team-based tournament, I rounded out Team Ken with Ken Jennings (we meet again, see above) & Matt Jackson. Ken, Matt, and I did a bit of evidence-based studying for our return to the show—if you’d like to hear a bit about the types of data science you can do to dig into Jeopardy strategy, you can listen to this NPR Planet Money episode, where Ken and I (among others) shared a bit of our experience. After two weeks of some of the most impeccably played Jeopardy I have ever witnessed (in the audience, and occasionally at the podium), we split a solid $300,000 second place prize.\n\n\n(2023) Master Minds\nIn 2023, I was selected to join the team of sweet and smart trivia experts holding court on the Game Show Network show Master Minds. On the show, three contestants face off against three trivia experts, competing to be the last contestant and last expert to answer questions against each other for $10,000. Depending on the air schedule, if you’re lucky, you can catch me on weekdays at 6 pm answering questions, serving up fun facts, and very visibly reacting to questions I’m excited to answer.\n\n\n(2024) Jeopardy! Invitational Tournament\nFive years and one global pandemic after I was previously invited back to Jeopardy!, I was lucky enough to be one of the past champions selected to return for the first Invitational Tournament, where players from different generations of the show get to see if they can shake off the rust. I loved getting to see old friends from the All-Star Games, and meeting other players old and new! And while I lost my quarterfinal game on a tough Final Jeopardy wagering choice, I’m still proud of my performance.\n\n\nPhotos (poorly organized, sorry!)\nThis photo gallery is under construction.\n\nblogdown::shortcode(.name = \"gallery\",\n                    folder = \"gallery\")"
  },
  {
    "objectID": "posts.html",
    "href": "posts.html",
    "title": "Blog posts",
    "section": "",
    "text": "How to install and switch between multiple R versions on a Mac\n\n\n\n\n\n\nhacks\n\n\nr\n\n\n\n\n\n\n\n\n\nMay 21, 2024\n\n\n\n\n\n\n\n\n\n\n\n\nExport your conda envs –from-history !\n\n\n\n\n\n\nhacks\n\n\npython\n\n\nconda\n\n\n\n\n\n\n\n\n\nMay 20, 2024\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/2024-05-21-multiple-r-versions.html",
    "href": "posts/2024-05-21-multiple-r-versions.html",
    "title": "How to install and switch between multiple R versions on a Mac",
    "section": "",
    "text": "Every time I start a new analysis project, I like to try to start it on the newest available version of R so I can benefit from all those nice updates. (Additionally, some packages update their minimum compatible R version so not only do I get the newest version of R, I also get it to play most nicely with the newest version of packages!)\nHowever, R’s default installation behavior when you use a .pkg installer on Mac is to uninstall all other installed versions of R. Which is quite bad for reproducibility! If my analysis code pipelines are basically independent from one another, I ought to be able to have multiple versions of R installed at the same time and associate different versions of R with different project folders.\nTurns out, the framework (or the Framework… you’ll see) is already there! With a few additional steps, you too can become the master of versions. (And then you’ll have no excuse for starting your new R projects using that old, dusty R version…)"
  },
  {
    "objectID": "posts/2024-05-21-multiple-r-versions.html#its-pretty-easy-on-linux-actually",
    "href": "posts/2024-05-21-multiple-r-versions.html#its-pretty-easy-on-linux-actually",
    "title": "How to install and switch between multiple R versions on a Mac",
    "section": "It’s pretty easy on Linux, actually",
    "text": "It’s pretty easy on Linux, actually\nIf you’re running on Linux, the default R installer behavior is to install R without uninstalling existing versions. How nice! As such, you should be able to install whichever additional versions you want without following any special instructions. Then follow the Linux section of these official Posit instructions to change which version RStudio attempts to open."
  },
  {
    "objectID": "posts/2024-05-21-multiple-r-versions.html#its-also-pretty-easy-on-windows",
    "href": "posts/2024-05-21-multiple-r-versions.html#its-also-pretty-easy-on-windows",
    "title": "How to install and switch between multiple R versions on a Mac",
    "section": "It’s also pretty easy on Windows",
    "text": "It’s also pretty easy on Windows\nIf you’re running on Windows, old forum posts suggest that the default R installer behavior is also to install R without uninstalling existing versions. (Why does it only do it for Mac, then…?) According to the official Posit instructions linked above, you can hold down the Ctrl key when clicking the RStudio icon and a dialog box will appear asking you to choose which version of R to open RStudio with."
  },
  {
    "objectID": "posts/2024-05-21-multiple-r-versions.html#meanwhile-for-macs",
    "href": "posts/2024-05-21-multiple-r-versions.html#meanwhile-for-macs",
    "title": "How to install and switch between multiple R versions on a Mac",
    "section": "Meanwhile, for Macs…",
    "text": "Meanwhile, for Macs…\nBelow, see the steps for maintaining and switching between simultaneously installed versions of R on a Mac.\nThese instructions were inspired by Jacob Price’s blog post, but updated given R/Mac OS changes over time.\n\nMake your Mac “forget” that R is already installed\nAs I mentioned before, the evil Mac .pkg installer for R will by default uninstall any other installed versions of R before installing the new one. It does this by checking through the Mac’s list of installed application packages and removing all folders listed as being installed with R.\nHowever, when the installer installs the files, it actually by default installs R into a MAJOR.MINOR version-specific subfolder of the R install folder. That means that, for example, R 4.3.2 is installed into a folder for R 4.3. R 4.4.0 would get installed into a folder for R 4.4, which does not require overwriting R 4.3.2.\n\nNote: You cannot have multiple simultaneous versions of R with the same major and minor version but different patch numbers. For example, R 4.3.2 and R 4.0.0 simultaneously are okay, but R 4.3.2 and R 4.3.3 will overwrite each other’s files.\n\nThus, the only thing you need to do to trick your Mac into not deleting other R versions is to remove those R application files from the list of installed packages, without actually deleting the application files themselves.\nThis way, when the new R installer runs, it doesn’t think there is any old version of R to uninstall.\nFirst, in a terminal, use the pkgutil command to list all of your Mac’s “known” app packages associated with R.\npkgutil --pkgs='org.?-project*'\nThe --pkgs flag can take a regex string as shown above. This regex will find all packages that start with org.r-project or org.R-project. Yeah, the capital/lowercase R thing is annoying. Be careful!\nYou’ll probably get the same package list as I did, but defer to what shows up on your own terminal (for example, if you’re running an Intel Mac instead of an Apple chip Mac.)\nEach of these files pertains to a different component of R’s underlying application package source, including the GUI, the source code, and associated LaTeX info. Now, once for each of the file names you see, run, for example:\nsudo pkgutil --forget org.R-project.arm64.R.GUI.pkg\nYou need to do this once for each of the files that are listed when you run pkgutil --pkgs='org.?-project*'. You can make sure you’ve gotten them all by checking that no packages show up when you run that command.\nNow, your Mac thinks R is no longer installed. But when you run:\n#| echo: true\n# These are the R versions that I have installed\nls -lh /Library/Frameworks/R.framework/Versions\nYou should see that the folder for your existing R install is still there!\nYou can also see when you ls -l the content of /Library/Frameworks/R.framework/Versions that the “Current” folder, which is what RStudio calls by default, is merely symlinked to a specific R version (see that arrow pointing to one of the version-specific R folders), as opposed to there being only one “Current” folder that is fully overwritten every time you install R. If you change which R version “Current” points to, you could change which version RStudio runs with!\n\n\nInstall the new version of R as usual\nNow that you’ve made your Mac forget that R was ever there, you can run the new .pkg R installer and install freely.\n\nIf you’re paying attention on the second screen of the .pkg installer, you will notice that it gives you instructions about how to “forget” the old R install if you want to stop the force-uninstall behavior. However, they don’t tell you every single pkgutil-listed package you need to pkgutil --forget. If you don’t forget all of the R-associated packages, the installer will overwrite some of the existing R application files, which renders the previous R version “incomplete” and unusable. That’s why you do need to check for every possible R-related package file using pkgutil --pkgs.\n\n\n\nSwitch the active version\nI prefer the RSwitch menu bar GUI utility for switching my active R version.\nIf you want to be hardcore and do it without installing any extra software, the official Posit instructions also tell you that you can manually symlink the “Current” folder to the R version you want to use. For example, this will set me up to use R 4.3:\n# remember, ln syntax puts source first, then link destination\nln -s /Library/Frameworks/R.framework/Versions/4.3-arm64 /Library/Frameworks/R.framework/Versions/Current\nHowever, the Posit instructions also mention that you can use RSwitch, so no need to be a hero and use command line to switch every time 😜\n\n\nAccessing R packages\nEach R version has a separate store for packages. (This makes total sense.) Once you’ve switched versions, how do you get the packages you need for the R version you’re working on? I strongly recommend using the renv package for managing R package environments. While renv does not handle R version switching for you (hence this blog post), its system for managing package stores already smoothly handles packages for different R versions. You can use renv as usual and you should notice no differences as long as you switch to the correct R version before opening your R project. (Conveniently, renv will throw a warning upon startup if the version of R detected is different than the version recorded in the lockfile. If you forget to switch R versions, you can close RStudio, switch the R version, and reopen it.)"
  },
  {
    "objectID": "teaching/teaching-impact.html",
    "href": "teaching/teaching-impact.html",
    "title": "Teaching impact",
    "section": "",
    "text": "Collected below are a series of free-form testimonials about my teaching effectiveness. For my instructorships of record and teaching assistantships, I have excerpted comments about various aspects of my teaching from official teaching evaluations (original documents available upon request). I note that for my coding boot camp instructorships, students were not prompted to give instructor-specific feedback, so I have fewer student comments from those teaching experiences, but I have included a few testimonials that I do have, where relevant.\nComments are organized into three themes: my skills in breaking down complex topics, my energy in the classroom, and my clear, prompt, and actionable formative written feedback on assignments.",
    "crumbs": [
      "Teaching impact"
    ]
  },
  {
    "objectID": "teaching/teaching-impact.html#clear-handling-of-complex-topics",
    "href": "teaching/teaching-impact.html#clear-handling-of-complex-topics",
    "title": "Teaching impact",
    "section": "Clear handling of complex topics",
    "text": "Clear handling of complex topics\n\nDr Thieu did a very excellent job at making sure we understood the course information without feeling too overwhelmed or confused. (Statistics II in Psychology, Spring 2024, Spelman College)\n\n\nProfessor Thieu knows her stuff! You can tell she really knows the subject matter, and can answer questions in a relatable modern way. (Science of Psychology: Explorations & Applications, Summer 2022, Columbia University)\n\n\nI was very impressed how [she was] able to keep an eye on the chat, walk through the material, and switch to focusing on areas students were struggling, and in an absolutely relaxed way, which given that the material was new to people, was the perfect approach for a positive learning environment. (Supervisor comment, Foundations for Research Computing bootcamp, Winter 2022, Columbia University)\n\n\nOverall, Monica’s pacing was superb. She explained every step in great detail without lingering too long on any one point. Because she explained everything she typed, it was very easy not only to understand how the results were attained, but also why each step was chosen over any other option. Such clear explanations help students retain the information and, hopefully, make similar connections for themselves in their future projects. (Teaching observation, Wrangling Multilevel Data in the Tidyverse coding workshop, Spring 2022, Columbia University)\n\n\nMonica’s teaching and discussion leading skills are great. She was very friendly and facilitated really fun and interactive class activities to introduce some of the topics we were discussing and was also great at helping to explain concepts when asked about them in class. (Science of Psychology: Explorations & Applications, Spring 2021, Columbia University)\n\n\nMonica was a great TA: very approachable, clearly walked us through assignment requirements and expectations, taught us to code R in a straightforward and helpful manner, and maintained a positive and enthusiastic attitude throughout. (Research Methods, Fall 2019, Columbia University)\n\n\nShe also took on the daunting job of teaching non-CompSci students the basics of coding in R, and did it very well. I actually ended up enjoying the coding parts of the lab sections. (Research Methods, Fall 2018, Columbia University)\n\n\nMonica Thieu is a fantastic instructor, I never felt like I didn’t understand something or couldn’t do an assignment for class because Monica was great at explaining the material and finding new ways of understanding the material. (Research Methods, Fall 2018, Columbia University)\n\n\nMonica was a wonderful TA. She was very knowledgeable and good at explaining things, and was very available to provide help that was indeed helpful. She was also engaging in terms of leading discussions. (Research Methods, Fall 2018, Columbia University)",
    "crumbs": [
      "Teaching impact"
    ]
  },
  {
    "objectID": "teaching/teaching-impact.html#energy-and-enthusiasm",
    "href": "teaching/teaching-impact.html#energy-and-enthusiasm",
    "title": "Teaching impact",
    "section": "Energy and enthusiasm",
    "text": "Energy and enthusiasm\n\nShe was very engaging and promoted an open/welcoming environment where everyone felt safe to participate. (Science of Psychology: Explorations & Applications, Summer 2022, Columbia University)\n\n\nMonica kept my enthusiasm up by validating how I felt about programming environments while also conveying information in a way that encouraged asking questions and problem-solving. (Foundations for Research Computing bootcamp, Winter 2022, Columbia University)\n\n\nMonica was a very clear speaker, and she had a very uplifting and upbeat energy. (Science of Psychology: Explorations & Applications, Spring 2021, Columbia University)\n\n\nShe’s an amazing leader and teacher. She takes charge and I can definitely see her becoming a teacher one day, she just has the natural instincts of one. (Science of Psychology: Explorations & Applications, Spring 2021, Columbia University)\n\n\nMonica is such a fun and knowledgeable TA, I anticipate she will be a great teacher if she chooses to do so. She is very organized and manages to provide prompt feedback on assignments and foster a fun and engaging classroom environment. (Science of Psychology: Explorations & Applications, Spring 2021, Columbia University)\n\n\nMonica is a natural teacher and it’s VERY apparent that she has a passion for research. She’s absolutely fantastic! (Research Methods, Fall 2019, Columbia University)\n\n\nMonica is the best TA I’ve ever had! She’s easygoing, was super passionate about the topic (which I don’t think is common in a Research Methods TA), and was always well prepared for leading sections. (Research Methods, Fall 2018, Columbia University)",
    "crumbs": [
      "Teaching impact"
    ]
  },
  {
    "objectID": "teaching/teaching-impact.html#clear-and-prompt-written-feedback",
    "href": "teaching/teaching-impact.html#clear-and-prompt-written-feedback",
    "title": "Teaching impact",
    "section": "Clear and prompt written feedback",
    "text": "Clear and prompt written feedback\n\nThe instructor provides really helpful feedback on the problem sets. (Statistics II in Psychology, Spring 2024, Spelman College)\n\n\nAlways helpful and a quick grader as well. Her feedback was also very helpful (Science of Psychology: Explorations & Applications, Spring 2021, Columbia University)\n\n\nMonica’s feedback has always been very informative and helpful in terms of knowing what you might’ve missed/haven’t understood in the assignments. (Science of Psychology: Explorations & Applications, Spring 2021, Columbia University)\n\n\nHer feedback on my assignments was always helpful and clear. (Research Methods, Fall 2019, Columbia University)\n\n\nShe returned assignments promptly and was fair in her grading, explaining any deductions. (Research Methods, Fall 2018, Columbia University)",
    "crumbs": [
      "Teaching impact"
    ]
  },
  {
    "objectID": "teaching/teaching-roles.html",
    "href": "teaching/teaching-roles.html",
    "title": "Teaching roles and responsibilities",
    "section": "",
    "text": "Institution: Spelman College\nTerm: spring 2024\nSupervisor contact: Jimmeka Guillory Wright\nView syllabus\n\n\n\n\nUpper-level undergraduate class, satisfies Advanced Measurement requirement for psychology majors\nStatistics with a regression framework\nAnalysis techniques taught in R/RStudio Cloud\n25 students\n\n\n\n\n\nWrote curriculum\n\nDefined learning objectives\nEvaluated and selected readings\nWrote lesson plans, pre-class reading quizzes, and problem sets\nCreated teaching materials: slides, activity materials, R notebooks\n\nLectured, live-coded, and supervised activities\nGraded assignments\n\nBoth multiple-choice/short answer assignments and R-based computational assignments\nGave detailed formative feedback on problem sets using single-point-style rubrics\n\nHeld weekly office hours\n\n\n\n\n\n\nInstitution: Columbia University\nTerm: summer 2022\nView syllabus\n\n\n\n\nIntro-level undergraduate class, satisfies core science requirement for non-majors\n12 students, with learning teams of 4 students each\n\n\n\n\n\nUpdated curriculum\n\nDefined learning objectives\nEvaluated and selected readings\nEdited lesson plans, pre-class quizzes, and assignment prompts\nCreated and edited teaching materials: slides, activity materials\n\nLectured and led discussions\nGraded writing assignments\n\nGave detailed formative feedback on individual and group writing assignments and projects using single-point-style rubrics\n\nHeld weekly office hours",
    "crumbs": [
      "Teaching roles and responsibilities"
    ]
  },
  {
    "objectID": "teaching/teaching-roles.html#psy-417-statistics-ii-in-psychology",
    "href": "teaching/teaching-roles.html#psy-417-statistics-ii-in-psychology",
    "title": "Teaching roles and responsibilities",
    "section": "",
    "text": "Institution: Spelman College\nTerm: spring 2024\nSupervisor contact: Jimmeka Guillory Wright\nView syllabus\n\n\n\n\nUpper-level undergraduate class, satisfies Advanced Measurement requirement for psychology majors\nStatistics with a regression framework\nAnalysis techniques taught in R/RStudio Cloud\n25 students\n\n\n\n\n\nWrote curriculum\n\nDefined learning objectives\nEvaluated and selected readings\nWrote lesson plans, pre-class reading quizzes, and problem sets\nCreated teaching materials: slides, activity materials, R notebooks\n\nLectured, live-coded, and supervised activities\nGraded assignments\n\nBoth multiple-choice/short answer assignments and R-based computational assignments\nGave detailed formative feedback on problem sets using single-point-style rubrics\n\nHeld weekly office hours",
    "crumbs": [
      "Teaching roles and responsibilities"
    ]
  },
  {
    "objectID": "teaching/teaching-roles.html#psyc-1021-the-science-of-psychology-explorations-and-applications",
    "href": "teaching/teaching-roles.html#psyc-1021-the-science-of-psychology-explorations-and-applications",
    "title": "Teaching roles and responsibilities",
    "section": "",
    "text": "Institution: Columbia University\nTerm: summer 2022\nView syllabus\n\n\n\n\nIntro-level undergraduate class, satisfies core science requirement for non-majors\n12 students, with learning teams of 4 students each\n\n\n\n\n\nUpdated curriculum\n\nDefined learning objectives\nEvaluated and selected readings\nEdited lesson plans, pre-class quizzes, and assignment prompts\nCreated and edited teaching materials: slides, activity materials\n\nLectured and led discussions\nGraded writing assignments\n\nGave detailed formative feedback on individual and group writing assignments and projects using single-point-style rubrics\n\nHeld weekly office hours",
    "crumbs": [
      "Teaching roles and responsibilities"
    ]
  },
  {
    "objectID": "teaching/teaching-roles.html#wistem-data-science-lab-module",
    "href": "teaching/teaching-roles.html#wistem-data-science-lab-module",
    "title": "Teaching roles and responsibilities",
    "section": "WiSTEM Data Science Lab Module",
    "text": "WiSTEM Data Science Lab Module\n\nInstitution: Spelman College\nTerms: summer 2023, summer 2024\nProgram directors: Monica Stephens, Tiffany Oliver\n\n\nCourse details\n\nOffered as part of an application-only 6-week summer bridge accelerator for incoming STEM first-year students\nFull program includes enrollment in summer math and computer science courses for credit, and science lab courses not for credit (including this course)\nStudents learned basic data manipulation and visualization skills in R and completed independent lab projects\n\n\n\nInstructional responsibilities\n\nCreated curriculum\n\nDefined learning objectives\nCreated all lesson plans and teaching materials\n\nLectured, supervised lab work, and advised on independent projects",
    "crumbs": [
      "Teaching roles and responsibilities"
    ]
  },
  {
    "objectID": "teaching/teaching-roles.html#psyc-1021-the-science-of-psychology-explorations-and-applications-1",
    "href": "teaching/teaching-roles.html#psyc-1021-the-science-of-psychology-explorations-and-applications-1",
    "title": "Teaching roles and responsibilities",
    "section": "PSYC 1021 – The Science of Psychology: Explorations and Applications",
    "text": "PSYC 1021 – The Science of Psychology: Explorations and Applications\n\nInstitution: Columbia University\nTerm: spring 2021\nLead instructor: Caroline Marvin\n\n\nCourse details\n\nAs above\nApproximately 30 students, with learning teams of approximately 4 students each\n\n\n\nInstructional responsibilities\n\nDeveloped curriculum, in conjunction with lead instructor\n\nDefined learning objectives\nEvaluated and selected readings\nWrote lesson plans, pre-class quizzes, and assignment prompts\nCreated teaching materials: slides, activity materials, mini-lecture videos\n\nGuest lecturing (approximately 1/4 of instructional modules)\nGraded writing assignments\n\nGave detailed formative feedback on individual and group writing assignments and projects using single-point-style rubrics\n\nHeld weekly office hours",
    "crumbs": [
      "Teaching roles and responsibilities"
    ]
  },
  {
    "objectID": "teaching/teaching-roles.html#psychology-department-coding-bootcamp",
    "href": "teaching/teaching-roles.html#psychology-department-coding-bootcamp",
    "title": "Teaching roles and responsibilities",
    "section": "Psychology department coding bootcamp",
    "text": "Psychology department coding bootcamp\n\nInstitution: Columbia University\nTerms: spring 2018, fall 2018, fall 2019, fall 2020, fall 2021\n\n\nCourse details\n\nUnofficial open-enrollment workshop for psychology students at the undergrad level and above\n5-20 students per session, depending on the semester\n\n\n\nInstructional responsibilities\n\nCurriculum development\n\nDrafted lessons for 2 half-day sessions\nPeer-reviewed 1 session lesson drafted by another co-instructor\n\nLecture: Live-code lectured some or all of the lessons I prepared (depending on the semester)",
    "crumbs": [
      "Teaching roles and responsibilities"
    ]
  },
  {
    "objectID": "teaching/teaching-roles.html#psyc-1490-research-methods-in-psychology",
    "href": "teaching/teaching-roles.html#psyc-1490-research-methods-in-psychology",
    "title": "Teaching roles and responsibilities",
    "section": "PSYC 1490 – Research Methods in Psychology",
    "text": "PSYC 1490 – Research Methods in Psychology\n\nInstitution: Columbia University\nTerms: fall 2018, fall 2019\nLead instructor: Katherine Fox-Glassman\n\n\nCourse details\n\nUpper-level undergraduate class, required for the psychology major\nApproximately 70 students in the entire class, with lab sections of approximately 15 students\n\n\n\nInstructional responsibilities\n\nUpdated course materials\n\nWrote 2 new R lesson plans and 2 new associated problem sets\nUpdated and annotated existing lesson plan outlines for each lab class\nCreated slide decks for each lab class\n\nTaught lab section\nGraded assignments\n\nExam short-answer questions (for all students)\nMethods problem sets in R (for students in my section)\nScience writing assignments and projects (for students in my section)\nIndividual and group presentations (for students in my section)\n\nHeld weekly office hours\nWrote short-answer exam questions",
    "crumbs": [
      "Teaching roles and responsibilities"
    ]
  },
  {
    "objectID": "teaching/teaching-roles.html#foundations-for-research-computing-coding-bootcamp",
    "href": "teaching/teaching-roles.html#foundations-for-research-computing-coding-bootcamp",
    "title": "Teaching roles and responsibilities",
    "section": "Foundations for Research Computing coding bootcamp",
    "text": "Foundations for Research Computing coding bootcamp\n\nInstitution: Columbia University\nTerms: fall 2019, spring 2020, winter 2022\nCoordinator: Patrick Smyth\n\n\nCourse details\n\nOpen-enrollment workshop hosted by Columbia Libraries for graduate students and postdocs across the university\n30 students per session (in-person), 50 students per session (online)\nAssociated with The Carpentries\n\n\n\nInstructional responsibilities\n\nDelivered live-code lecture sessions introducing students to basic file navigation commands in Unix shell (1 3-hour session per workshop)",
    "crumbs": [
      "Teaching roles and responsibilities"
    ]
  },
  {
    "objectID": "teaching/teaching-roles.html#busi-b8144-intro-to-programming-in-r",
    "href": "teaching/teaching-roles.html#busi-b8144-intro-to-programming-in-r",
    "title": "Teaching roles and responsibilities",
    "section": "BUSI B8144 – Intro to Programming in R",
    "text": "BUSI B8144 – Intro to Programming in R\n\nInstitution: Columbia University\nTerms: spring 2019, spring 2020, fall 2021\nLead instructor: Jared Lander\n\n\nCourse details\n\nMaster’s level half-semester elective course in the business school\nLecture class with 40-70 students depending on the term\n\n\n\nInstructional responsibilities\n\nUpdated course materials\n\nRevised existing problem sets to align objectives with lecture content\nRe-implemented problem sets using learnr for students to complete exercises online\n\nGraded and gave written feedback on R problem sets\nHeld weekly office hours\nSupported students’ work over email",
    "crumbs": [
      "Teaching roles and responsibilities"
    ]
  },
  {
    "objectID": "teaching/teaching-roles.html#psyc-1001-science-of-psychology",
    "href": "teaching/teaching-roles.html#psyc-1001-science-of-psychology",
    "title": "Teaching roles and responsibilities",
    "section": "PSYC 1001: Science of Psychology",
    "text": "PSYC 1001: Science of Psychology\n\nInstitution: Columbia University\nTerm: fall 2017\nLead instructor: Kathleen Taylor\n\n\nCourse details\n\nIntro-level undergraduate class, satisfies core science requirement for non-majors\nApproximately 100 students\n\n\n\nInstructional responsibilities\n\nGraded exam essays\nWrote multiple-choice and essay exam questions\nHeld weekly office hours\nDelivered guest lecture on memory",
    "crumbs": [
      "Teaching roles and responsibilities"
    ]
  }
]